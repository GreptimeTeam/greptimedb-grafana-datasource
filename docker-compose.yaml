version: '3.0'

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus_dev
    ports:
      - 9090:9090
    networks:
      - greptimedb-datasource
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter_dev
    # ports:
    #   - 9100:9100
    command:
      - '--path.rootfs=/'
    networks:
      - greptimedb-datasource

  greptimedb:
    image: greptime/greptimedb:v0.12.0
    container_name: greptimedb_dev
    command: standalone start --http-addr=0.0.0.0:4000 --rpc-bind-addr=0.0.0.0:4001 --mysql-addr=0.0.0.0:4002
    ports:
      - 4000:4000
      - 4001:4001
      - 4002:4002
    networks:
      - greptimedb-datasource

  grafana:
    user: root
    container_name: 'info8fcc-greptimedb-datasource'

    platform: 'linux/amd64'
    build:
      context: ./.config
      args:
        grafana_image: ${GRAFANA_IMAGE:-grafana-enterprise}
        grafana_version: ${GRAFANA_VERSION:-11.2.5}
    ports:
      - 3000:3000/tcp
      - 2345:2345/tcp # delve
    security_opt:
      - 'apparmor:unconfined'
      - 'seccomp:unconfined'
    cap_add:
      - SYS_PTRACE
    volumes:
      - ./dist:/var/lib/grafana/plugins/info8fcc-greptimedb-datasource
      - ./provisioning:/etc/grafana/provisioning
      - .:/root/info8fcc-greptimedb-datasource

    environment:
      NODE_ENV: development
      GF_LOG_FILTERS: plugin.info8fcc-greptimedb-datasource:debug
      GF_LOG_LEVEL: debug
      GF_DATAPROXY_LOGGING: 1
      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: info8fcc-greptimedb-datasource
      GOPROXY: https://goproxy.cn,direct
    networks:
      - greptimedb-datasource

networks:
  greptimedb-datasource:
