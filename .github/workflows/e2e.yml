name: Playwright Tests
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - uses: actions/setup-go@v5
        with:
          go-version: 'stable'

      - name: Build backend
        uses: magefile/mage-action@v3
        with:
          args: buildAll
          version: latest

      - name: Install frontend dependencies
        run: yarn install --frozen-lockfile

      - name: Build frontend
        run: yarn build
        env:
          NODE_OPTIONS: '--max_old_space_size=4096'

      - name: Install Playwright Browsers
        run: yarn playwright install --with-deps

      - name: Install and run Docker Compose
        uses: hoverkraft-tech/compose-action@v2.2.0
        with:
          compose-file: './docker-compose.yml'
      - name: Show Docker Compose Logs
        run: docker compose logs --timestamps
        if: always() # Run this even if the previous step fails
      - name: Wait for Grafana to be healthy
        run: |
          TIMEOUT=300 # Timeout in seconds (5 minutes)
          ELAPSED=0
          while true; do
            STATUS=$(docker compose ps --services --filter "status=healthy" --format json)
            if echo "$STATUS" | jq -r '.[].name' | grep -q "grafana"; then
              echo "Grafana is healthy!"
              break
            fi
            if [ "$ELAPSED" -ge "$TIMEOUT" ]; then
              echo "Timeout waiting for Grafana to become healthy"
              exit 1
            fi
            echo "Waiting for Grafana to become healthy..."
            sleep 5
            ELAPSED=$((ELAPSED + 5))
          done
      # - name: Wait for Grafana to start
      #   run: |
      #     curl http://localhost:3000
      #     #RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:3000)
      #     #echo $response
      #     #if [ $RESPONSE -ne 200 ]; then
      #     #  sleep 5;
      #     #  echo "Grafana is not accessible"
      #     #  exit 1
      #     #fi

      - name: Run Playwright tests
        run: yarn playwright test

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
