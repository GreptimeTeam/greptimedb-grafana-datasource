name: release

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  push:
    tags:
      - '*'

env:
  GRAFANA_VERSION: "11.2.5"

jobs:
  build_release:
    name: build_release
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Run install
        uses: borales/actions-yarn@v4
        with:
          cmd: install # will run `yarn install` command

      - name: Build
        run: yarn build

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.23

      - name: Run Mage
        uses: magefile/mage-action@v3

      - name: zip unsigned
        run: yarn zipunsigned

      - name: Sign
        run: yarn sign
        env:
          GRAFANA_ACCESS_POLICY_TOKEN: ${{ secrets.SIGN_TOKEN }}

      - name: zip
        run: yarn zip
      - name: Wait for files to settle
        run: sleep 5 # Wait for 5 seconds to ensure files are fully written and released
      - name: List files before release
        run: |
          ls -al info8fcc-greptimedb-datasource.zip
          ls -al info8fcc-greptimedb-datasource-unsigned.zip
          pwd # Print current working directory
        shell: bash
      - name: Determine Release Type
        id: release_type
        shell: bash
        run: |
          if [[ "${GITHUB_REF}" == *"-rc"* ]]; then
            echo "::set-output name=prerelease::true"
            echo "Release is a pre-release"
          else
            echo "::set-output name=prerelease::false"
            echo "Release is a production release"
          fi
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            info8fcc-greptimedb-datasource.zip
            info8fcc-greptimedb-datasource-unsigned.zip
          prerelease: ${{ steps.release_type.outputs.prerelease }} # Use the output from the previous step

      - uses: docker/setup-qemu-action@v3

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        if: startsWith(github.ref, 'refs/tags/')
        with:
          context: .
          file: Dockerfile
          push: true
          platforms: "linux/amd64,linux/arm64"
          tags: |
            greptime/grafana-greptimedb:${{ env.GRAFANA_VERSION }}-greptime-${{ github.ref_name }}
            ${{ steps.release_type.outputs.prerelease == 'false' && format('greptime/grafana-greptimedb:latest') || '' }}